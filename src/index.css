
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Enhanced Neumorphism Design System with Parallax Support */

@layer base {
  :root {
    --background: 240 240 245;
    --foreground: 30 30 40;

    --card: 240 240 245;
    --card-foreground: 30 30 40;

    --popover: 240 240 245;
    --popover-foreground: 30 30 40;

    --primary: 30 30 40;
    --primary-foreground: 240 240 245;

    --secondary: 230 230 235;
    --secondary-foreground: 30 30 40;

    --muted: 230 230 235;
    --muted-foreground: 115 115 125;

    --accent: 230 230 235;
    --accent-foreground: 30 30 40;

    --destructive: 239 68 68;
    --destructive-foreground: 255 255 255;

    --border: 220 220 225;
    --input: 220 220 225;
    --ring: 30 30 40;

    --radius: 1rem;

    /* Neumorphism specific variables */
    --neu-distance: 8px;
    --neu-intensity: 0.15;
    --neu-surface: 240 240 245;
    --neu-highlight: 255 255 255;
    --neu-shadow: 200 200 210;
  }

  .dark {
    --background: 25 25 35;
    --foreground: 240 240 250;

    --card: 25 25 35;
    --card-foreground: 240 240 250;

    --popover: 25 25 35;
    --popover-foreground: 240 240 250;

    --primary: 240 240 250;
    --primary-foreground: 25 25 35;

    --secondary: 35 35 45;
    --secondary-foreground: 240 240 250;

    --muted: 35 35 45;
    --muted-foreground: 161 161 170;

    --accent: 35 35 45;
    --accent-foreground: 240 240 250;

    --destructive: 239 68 68;
    --destructive-foreground: 255 255 255;

    --border: 45 45 55;
    --input: 45 45 55;
    --ring: 240 240 250;

    /* Dark mode Neumorphism */
    --neu-surface: 25 25 35;
    --neu-highlight: 45 45 55;
    --neu-shadow: 15 15 25;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    background: rgb(var(--background));
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
    overflow-x: hidden;
  }

  html {
    scroll-behavior: smooth;
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    *, *::before, *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
    
    .parallax-element {
      transform: none !important;
    }
  }
}

/* Neumorphism Core Components */
@layer utilities {
  .neu-flat {
    background: rgb(var(--neu-surface));
    box-shadow: 
      var(--neu-distance) var(--neu-distance) calc(var(--neu-distance) * 2) rgb(var(--neu-shadow) / var(--neu-intensity)),
      calc(var(--neu-distance) * -1) calc(var(--neu-distance) * -1) calc(var(--neu-distance) * 2) rgb(var(--neu-highlight) / 0.7);
    border-radius: 16px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .neu-pressed {
    background: rgb(var(--neu-surface));
    box-shadow: 
      inset 4px 4px 8px rgb(var(--neu-shadow) / var(--neu-intensity)),
      inset -4px -4px 8px rgb(var(--neu-highlight) / 0.7);
    border-radius: 16px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .neu-elevated {
    background: rgb(var(--neu-surface));
    box-shadow: 
      12px 12px 24px rgb(var(--neu-shadow) / 0.2),
      -12px -12px 24px rgb(var(--neu-highlight) / 0.8);
    border-radius: 20px;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .neu-button {
    @apply neu-flat cursor-pointer select-none;
    will-change: transform, box-shadow;
  }

  .neu-button:hover {
    transform: translateY(-2px);
    box-shadow: 
      calc(var(--neu-distance) + 2px) calc(var(--neu-distance) + 2px) calc(var(--neu-distance) * 2.5) rgb(var(--neu-shadow) / 0.2),
      calc(var(--neu-distance) * -1 - 2px) calc(var(--neu-distance) * -1 - 2px) calc(var(--neu-distance) * 2.5) rgb(var(--neu-highlight) / 0.8);
  }

  .neu-button:active {
    transform: translateY(1px);
    box-shadow: 
      inset 2px 2px 6px rgb(var(--neu-shadow) / var(--neu-intensity)),
      inset -2px -2px 6px rgb(var(--neu-highlight) / 0.7);
  }

  .neu-input {
    @apply neu-pressed;
    padding: 12px 16px;
    background: rgb(var(--neu-surface));
    border: none;
    outline: none;
    color: rgb(var(--foreground));
  }

  .neu-input:focus {
    box-shadow: 
      inset 6px 6px 12px rgb(var(--neu-shadow) / 0.2),
      inset -6px -6px 12px rgb(var(--neu-highlight) / 0.8),
      0 0 0 2px rgb(var(--primary) / 0.3);
  }

  .neu-card {
    @apply neu-flat;
    will-change: transform, box-shadow;
  }

  .neu-card:hover {
    transform: translateY(-4px);
    box-shadow: 
      16px 16px 32px rgb(var(--neu-shadow) / 0.25),
      -16px -16px 32px rgb(var(--neu-highlight) / 0.9);
  }

  /* Parallax utilities */
  .parallax-container {
    position: relative;
    overflow: hidden;
  }

  .parallax-element {
    will-change: transform;
  }

  /* Narrative journey animations */
  .fade-in-up {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
  }

  .fade-in-up.animate {
    opacity: 1;
    transform: translateY(0);
  }

  .stagger-children > * {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  .stagger-children.animate > *:nth-child(1) { transition-delay: 0.1s; }
  .stagger-children.animate > *:nth-child(2) { transition-delay: 0.2s; }
  .stagger-children.animate > *:nth-child(3) { transition-delay: 0.3s; }
  .stagger-children.animate > *:nth-child(4) { transition-delay: 0.4s; }
  .stagger-children.animate > *:nth-child(5) { transition-delay: 0.5s; }
  .stagger-children.animate > *:nth-child(6) { transition-delay: 0.6s; }

  .stagger-children.animate > * {
    opacity: 1;
    transform: translateY(0);
  }

  /* Smooth transitions for theme toggle */
  * {
    transition-property: color, background-color, border-color, box-shadow;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }

  /* Custom scrollbar with neumorphism */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: rgb(var(--neu-surface));
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb {
    background: rgb(var(--neu-shadow) / 0.3);
    border-radius: 4px;
    box-shadow: 
      inset 2px 2px 4px rgb(var(--neu-shadow) / 0.1),
      inset -2px -2px 4px rgb(var(--neu-highlight) / 0.5);
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgb(var(--neu-shadow) / 0.4);
  }

  /* Focus styles for accessibility */
  .neu-button:focus-visible,
  .neu-input:focus-visible {
    outline: 2px solid rgb(var(--primary));
    outline-offset: 2px;
  }

  /* Animation keyframes */
  @keyframes float {
    0%, 100% { 
      transform: translateY(0px) translateZ(0); 
    }
    50% { 
      transform: translateY(-10px) translateZ(0); 
    }
  }

  @keyframes pulse-neu {
    0%, 100% {
      box-shadow: 
        var(--neu-distance) var(--neu-distance) calc(var(--neu-distance) * 2) rgb(var(--neu-shadow) / var(--neu-intensity)),
        calc(var(--neu-distance) * -1) calc(var(--neu-distance) * -1) calc(var(--neu-distance) * 2) rgb(var(--neu-highlight) / 0.7);
    }
    50% {
      box-shadow: 
        calc(var(--neu-distance) * 1.5) calc(var(--neu-distance) * 1.5) calc(var(--neu-distance) * 3) rgb(var(--neu-shadow) / 0.2),
        calc(var(--neu-distance) * -1.5) calc(var(--neu-distance) * -1.5) calc(var(--neu-distance) * 3) rgb(var(--neu-highlight) / 0.9);
    }
  }

  .animate-float {
    animation: float 6s ease-in-out infinite;
  }

  .animate-pulse-neu {
    animation: pulse-neu 2s ease-in-out infinite;
  }
}
